services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: customs
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  kafka:
    image: bitnami/kafka:latest
    environment:
      # Включаем KRaft-режим
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CLUSTER_ID: "my-cluster-1"

      # Клиентские и контроллерные слушатели
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"

      # На каком слушателе контроллер ждёт запросов
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"

      # Задаём кворум контроллеров (single-node)
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"

      # Меж-брокерный трафик через PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

      # Разрешить небезопасный plaintext-listener
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - kafka-data:/bitnami/kafka/data

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/customs
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka

volumes:
  postgres-data:
  kafka-data:
